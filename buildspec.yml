version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 545220419294.dkr.ecr.ap-south-1.amazonaws.com)
      - REPOSITORY_URI=545220419294.dkr.ecr.ap-south-1.amazonaws.com/flask-eks-demo
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"flask-eks-demo","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Updating Kubernetes deployment...
      - aws eks update-kubeconfig --region ap-south-1 --name demo-cluster
      - kubectl set image deployment/flask-eks-demo flask-eks-demo=$REPOSITORY_URI:$IMAGE_TAG
artifacts:
  files: imagedefinitions.json